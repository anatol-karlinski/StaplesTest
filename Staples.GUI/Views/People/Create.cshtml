@model Staples.GUI.ViewModels.PersonDetailsViewModel
@using Staples.DAL.Enums

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h1 class="text-muted">
            NEW PERSON
        </h1>
        <hr />
        @if (Model != null && Model.Errors.Any())
        {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Unable to save new person!</h4>
            @foreach (var error in Model.Errors)
            {
                <p class="mb-0">@error</p>
            }
        </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PersonDetails.FirstName, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PersonDetails.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PersonDetails.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PersonDetails.MiddleName, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PersonDetails.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PersonDetails.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PersonDetails.LastName, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PersonDetails.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PersonDetails.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PersonDetails.Age, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PersonDetails.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PersonDetails.Age, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PersonDetails.Email, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PersonDetails.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PersonDetails.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PersonDetails.Gender, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.PersonDetails.Gender, new SelectList(Enum.GetValues(typeof(Gender))), "Select Gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PersonDetails.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <a href="/People/Index" class="btn  btn-outline-secondary" role="button">Back</a>
            <input type="submit" value="Create" class="btn btn-dark" />
        </div>
    </div>
}